###############################################################################
#
# IAR C/C++ Compiler V9.30.1.3056 for 8051                19/Oct/2016  16:42:26
# Copyright 2004-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\Source\Protocol_E.c
#    Command line       =  
#        -f "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg" (-DCPU32MHZ
#        -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6
#        -DMAC_CFG_RX_MAX=3) -f "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack
#        Mesh 1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg" (-DZIGBEEPRO
#        -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
#        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
#        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
#        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
#        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)
#        -DREJOIN_POLL_RATE=440 "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack
#        Mesh 1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\Source\Protocol_E.c" -D LOG_OUT -D UART1_PROTOCOL_RESOLVER=1 -D
#        xISQC -D NWK_AUTO_POLL -D ZTOOL_P1 -D ISR_KEYINTERRUPT -D xMT_TASK -D
#        xMT_SYS_FUNC -D xMT_ZDO_FUNC -D xLCD_SUPPORTED=DEBUG -D xPOWER_SAVING
#        -lC "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\WaterMachine\List" -lA
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\WaterMachine\List" --diag_suppress Pe001,Pa010 -o
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\WaterMachine\Obj" -e --no_code_motion --debug
#        --core=plain --dptr=16,1 --data_model=large --code_model=banked
#        --calling_convention=xdata_reentrant --place_constants=data_rom
#        --nr_virtual_regs 8 -I "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack
#        Mesh 1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\" -I "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\Source\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\Frame\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\Module\WaterMachine\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\ZMain\TI2530DB\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\hal\include\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\mac\include\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\mac\high_level\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
#        -I "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\mt\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\osal\include\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\services\saddr\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\services\sdata\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\stack\af\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\stack\nwk\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\stack\sapi\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\stack\sec\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\stack\sys\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\stack\zdo\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\zmac\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\zmac\f8w\" -Ohz
#    List file          =  
#        E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\WaterMachine\List\Protocol_E.lst
#    Object file        =  
#        E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 -
#        副本\CC2530DB\WaterMachine\Obj\Protocol_E.r51
#
###############################################################################

E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh 1.0.0\Projects\zstack\Samples\Demo_App_V1.3饮水机控制 - 副本\Source\Protocol_E.c
      1          #include "ProtocolFrame.h"
      2          #include "Protocol.h"
      3          #include "ProtocolHandle.h"
      4           
      5          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
      6          void Protocol_Init(SEND_INTERFACE SendHandle){ 
   \                     Protocol_Init:
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 12
   \   000005   74F4         MOV     A,#-0xc
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   EA           MOV     A,R2
   \   00000B   FE           MOV     R6,A
   \   00000C   EB           MOV     A,R3
   \   00000D   FF           MOV     R7,A
      7          	PROTOCOL_DESC_T pdt; 
      8          
      9          	pdt.ProtocolSize = sizeof(HEARTBEAT_PROTOCOL_T);
   \   00000E   7404         MOV     A,#0x4
   \   000010   12....       LCALL   ?XSTACK_DISP0_8
   \   000013   7403         MOV     A,#0x3
   \   000015   12....       LCALL   ??Subroutine3_0 & 0xFFFF
     10          	pdt.ModuleAction = HEARTBEAT_PROTOCOL; 
   \                     ??CrossCallReturnLabel_11:
   \   000018   7431         MOV     A,#0x31
   \   00001A   12....       LCALL   ?Subroutine2 & 0xFFFF
     11                  pdt.send = SendHandle; 
   \                     ??CrossCallReturnLabel_4:
   \   00001D   12....       LCALL   ?XSTACK_DISP0_8
   \   000020   12....       LCALL   ?Subroutine0 & 0xFFFF
     12          	Protocol_Register(&pdt,SEND);
   \                     ??CrossCallReturnLabel_0:
   \   000023   12....       LCALL   `??Protocol_Register::?relay`; Banked call to: Protocol_Register
     13          	
     14                  pdt.ProtocolSize = sizeof(STATE_PROTOCOL_T);
   \   000026   7404         MOV     A,#0x4
   \   000028   12....       LCALL   ?XSTACK_DISP0_8
   \   00002B   7401         MOV     A,#0x1
   \   00002D   12....       LCALL   ??Subroutine3_0 & 0xFFFF
     15          	pdt.ModuleAction = STATE_PROTOCOL; 
   \                     ??CrossCallReturnLabel_12:
   \   000030   7420         MOV     A,#0x20
   \   000032   12....       LCALL   ?Subroutine2 & 0xFFFF
     16                  pdt.send = SendHandle; 
   \                     ??CrossCallReturnLabel_5:
   \   000035   12....       LCALL   ?XSTACK_DISP0_8
   \   000038   12....       LCALL   ?Subroutine0 & 0xFFFF
     17          	Protocol_Register(&pdt,SEND);
   \                     ??CrossCallReturnLabel_1:
   \   00003B   12....       LCALL   `??Protocol_Register::?relay`; Banked call to: Protocol_Register
     18                  
     19          	pdt.ProtocolSize = sizeof(ACK_PROTOCOL_T);
   \   00003E   7404         MOV     A,#0x4
   \   000040   12....       LCALL   ?XSTACK_DISP0_8
   \   000043   7401         MOV     A,#0x1
   \   000045   12....       LCALL   ??Subroutine3_0 & 0xFFFF
     20          	pdt.ModuleAction = ACK_PROTOCOL; 
   \                     ??CrossCallReturnLabel_13:
   \   000048   74A1         MOV     A,#-0x5f
   \   00004A   12....       LCALL   ?Subroutine2 & 0xFFFF
     21                  pdt.send = SendHandle; 
   \                     ??CrossCallReturnLabel_6:
   \   00004D   12....       LCALL   ?XSTACK_DISP0_8
   \   000050   12....       LCALL   ?Subroutine0 & 0xFFFF
     22          	Protocol_Register(&pdt,SEND);
   \                     ??CrossCallReturnLabel_2:
   \   000053   12....       LCALL   `??Protocol_Register::?relay`; Banked call to: Protocol_Register
     23                  
     24          	pdt.ProtocolSize = sizeof(ADDRREPORT_PROTOCOL_T);
   \   000056   7404         MOV     A,#0x4
   \   000058   12....       LCALL   ?XSTACK_DISP0_8
   \   00005B   12....       LCALL   ?Subroutine1 & 0xFFFF
     25          	pdt.ModuleAction = ADDRREPORT_PROTOCOL; 
   \                     ??CrossCallReturnLabel_8:
   \   00005E   74B1         MOV     A,#-0x4f
   \   000060   12....       LCALL   ?Subroutine2 & 0xFFFF
     26                  pdt.send = SendHandle; 
   \                     ??CrossCallReturnLabel_7:
   \   000063   12....       LCALL   ?XSTACK_DISP0_8
   \   000066   12....       LCALL   ?Subroutine0 & 0xFFFF
     27          	Protocol_Register(&pdt,SEND);
   \                     ??CrossCallReturnLabel_3:
   \   000069   12....       LCALL   `??Protocol_Register::?relay`; Banked call to: Protocol_Register
     28          
     29                  
     30                  pdt.ProtocolSize = sizeof(CMD_PROTOCOL_T);
   \   00006C   7404         MOV     A,#0x4
   \   00006E   12....       LCALL   ?XSTACK_DISP0_8
   \   000071   12....       LCALL   ?Subroutine1 & 0xFFFF
     31          	pdt.ModuleAction = CMD_PROTOCOL;  
   \                     ??CrossCallReturnLabel_9:
   \   000074   14           DEC     A
   \   000075   F0           MOVX    @DPTR,A
   \   000076   A3           INC     DPTR
   \   000077   F0           MOVX    @DPTR,A
     32          	pdt.handle = Cmd_P_Handle;
   \   000078   7408         MOV     A,#0x8
   \   00007A   12....       LCALL   ?XSTACK_DISP0_8
   \   00007D   74..         MOV     A,#`??Cmd_P_Handle::?relay` & 0xff
   \   00007F   F0           MOVX    @DPTR,A
   \   000080   A3           INC     DPTR
   \   000081   74..         MOV     A,#(`??Cmd_P_Handle::?relay` >> 8) & 0xff
   \   000083   F0           MOVX    @DPTR,A
     33          	Protocol_Register(&pdt,RECEIVE);
   \   000084                ; Setup parameters for call to function Protocol_Register
   \   000084   7901         MOV     R1,#0x1
   \   000086   AA..         MOV     R2,?XSP + 0
   \   000088   AB..         MOV     R3,?XSP + 1
   \   00008A   12....       LCALL   `??Protocol_Register::?relay`; Banked call to: Protocol_Register
     34          	
     35                  pdt.ProtocolSize = sizeof(STATEGET_PROTOCOL_T);
   \   00008D   7404         MOV     A,#0x4
   \   00008F   12....       LCALL   ?XSTACK_DISP0_8
   \   000092   12....       LCALL   ?Subroutine1 & 0xFFFF
     36          	pdt.ModuleAction = STATEGET_PROTOCOL;  
   \                     ??CrossCallReturnLabel_10:
   \   000095   F0           MOVX    @DPTR,A
   \   000096   A3           INC     DPTR
   \   000097   14           DEC     A
   \   000098   F0           MOVX    @DPTR,A
     37          	pdt.handle = StateGet_P_Handle;
   \   000099   7408         MOV     A,#0x8
   \   00009B   12....       LCALL   ?XSTACK_DISP0_8
   \   00009E   74..         MOV     A,#`??StateGet_P_Handle::?relay` & 0xff
   \   0000A0   F0           MOVX    @DPTR,A
   \   0000A1   A3           INC     DPTR
   \   0000A2   74..         MOV     A,#(`??StateGet_P_Handle::?relay` >> 8) & 0xff
   \   0000A4   F0           MOVX    @DPTR,A
     38          	Protocol_Register(&pdt,RECEIVE);
   \   0000A5                ; Setup parameters for call to function Protocol_Register
   \   0000A5   7901         MOV     R1,#0x1
   \   0000A7   AA..         MOV     R2,?XSP + 0
   \   0000A9   AB..         MOV     R3,?XSP + 1
   \   0000AB   12....       LCALL   `??Protocol_Register::?relay`; Banked call to: Protocol_Register
     39          	
     40          
     41          }
   \   0000AE   740C         MOV     A,#0xc
   \   0000B0   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000B3   7F01         MOV     R7,#0x1
   \   0000B5   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   A3           INC     DPTR
   \   000002   7410         MOV     A,#0x10
   \   000004   F0           MOVX    @DPTR,A
   \   000005   7406         MOV     A,#0x6
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7402         MOV     A,#0x2
   \   000002                REQUIRE ??Subroutine3_0
   \   000002                ; // Fall through to label ??Subroutine3_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine3_0:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   85..82       MOV     DPL,?XSP + 0
   \   000004   85..83       MOV     DPH,?XSP + 1
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   EE           MOV     A,R6
   \   000001   F0           MOVX    @DPTR,A
   \   000002   A3           INC     DPTR
   \   000003   EF           MOV     A,R7
   \   000004   F0           MOVX    @DPTR,A
   \   000005                ; Setup parameters for call to function Protocol_Register
   \   000005                ; Setup parameters for call to function Protocol_Register
   \   000005                ; Setup parameters for call to function Protocol_Register
   \   000005                ; Setup parameters for call to function Protocol_Register
   \   000005   7900         MOV     R1,#0x0
   \   000007   AA..         MOV     R2,?XSP + 0
   \   000009   AB..         MOV     R3,?XSP + 1
   \   00000B   22           RET

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??Protocol_Init::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Protocol_Init
     42          

   Maximum stack usage in bytes:

   XSTACK Function
   ------ --------
     21   Protocol_Init
       21   -> Protocol_Register


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       8  ??Subroutine3_0
      12  ?Subroutine0
       2  ?Subroutine1
       8  ?Subroutine2
     184  Protocol_Init
       6  Protocol_Init::?relay

 
 214 bytes in segment BANKED_CODE
   6 bytes in segment BANK_RELAYS
 
 220 bytes of CODE memory

Errors: none
Warnings: none

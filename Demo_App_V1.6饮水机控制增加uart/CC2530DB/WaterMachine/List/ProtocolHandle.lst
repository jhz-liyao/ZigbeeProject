###############################################################################
#
# IAR C/C++ Compiler V9.30.1.3056 for 8051                20/Oct/2016  12:38:58
# Copyright 2004-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\Module\WaterMachine\ProtocolHandle.c
#    Command line       =  
#        -f "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg" (-DCPU32MHZ
#        -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6
#        -DMAC_CFG_RX_MAX=3) -f "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack
#        Mesh 1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg" (-DZIGBEEPRO
#        -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
#        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
#        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
#        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
#        -DPOLL_RATE=100 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)
#        -DREJOIN_POLL_RATE=440 "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack
#        Mesh 1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\Module\WaterMachine\ProtocolHandle.c" -D LOG_OUT -D
#        UART1_PROTOCOL_RESOLVER=1 -D xISQC -D NWK_AUTO_POLL -D ZTOOL_P1 -D
#        ISR_KEYINTERRUPT -D xMT_TASK -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D
#        xLCD_SUPPORTED=DEBUG -D xPOWER_SAVING -lC
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\WaterMachine\List" -lA
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\WaterMachine\List" --diag_suppress Pe001,Pa010 -o
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\WaterMachine\Obj" -e --no_code_motion --debug
#        --core=plain --dptr=16,1 --data_model=large --code_model=banked
#        --calling_convention=xdata_reentrant --place_constants=data_rom
#        --nr_virtual_regs 8 -I "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack
#        Mesh 1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\" -I "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\Source\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\Frame\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\Module\WaterMachine\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\ZMain\TI2530DB\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\hal\include\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\mac\include\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\mac\high_level\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
#        -I "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\mt\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\osal\include\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\services\saddr\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\services\sdata\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\stack\af\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\stack\nwk\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\stack\sapi\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\stack\sec\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\stack\sys\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\stack\zdo\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\zmac\" -I
#        "E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\..\..\..\..\..\Components\zmac\f8w\" -Ohz
#    List file          =  
#        E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\WaterMachine\List\ProtocolHandle.lst
#    Object file        =  
#        E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh
#        1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 -
#        副本\CC2530DB\WaterMachine\Obj\ProtocolHandle.r51
#
###############################################################################

E:\资源(G：)\#个人项目\ZigbeeProject\Z-Stack Mesh 1.0.0\Projects\zstack\Samples\Demo_App_V1.4饮水机控制 - 副本\Module\WaterMachine\ProtocolHandle.c
      1          #include "ProtocolHandle.h"
      2          #include "WaterMachineDriver.h"
      3          #include "ModuleManager.h"
      4          //void Cmd_P_Handle(PROTOCOL_INFO_T* pi){
      5          //    printf("控制指令:%X\r\n", pi->protocol.Cmd_P.para1);
      6          //}
      7          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
      8          void StateGet_P_Handle(PROTOCOL_INFO_T* pi){
   \                     StateGet_P_Handle:
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
      9              printf("获取状态:%X\r\n", pi->protocol.StateGet_P.para1);
   \   000005                ; Setup parameters for call to function printf
   \   000005   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   000008   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00000B   7A..         MOV     R2,#`?<Constant "\\273\\361\\310\\241\\327\\264\\314\\254:%` & 0xff
   \   00000D   7B..         MOV     R3,#(`?<Constant "\\273\\361\\310\\241\\327\\264\\314\\254:%` >> 8) & 0xff
   \   00000F   02....       LJMP    ?Subroutine0 & 0xFFFF
     10          } 

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   8A82         MOV     DPL,R2
   \   000002   8B83         MOV     DPH,R3
   \   000004                REQUIRE ??Subroutine2_0
   \   000004                ; // Fall through to label ??Subroutine2_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine2_0:
   \   000000   A3           INC     DPTR
   \   000001   A3           INC     DPTR
   \   000002   A3           INC     DPTR
   \   000003   A3           INC     DPTR
   \   000004   A3           INC     DPTR
   \   000005   A3           INC     DPTR
   \   000006   E0           MOVX    A,@DPTR
   \   000007   F5..         MOV     ?V0,A
   \   000009   75..00       MOV     ?V1,#0x0
   \   00000C   78..         MOV     R0,#?V0
   \   00000E   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   12....       LCALL   `??printf::?relay`   ; Banked call to: printf
   \   000003   7402         MOV     A,#0x2
   \   000005   12....       LCALL   ?DEALLOC_XSTACK8
   \   000008                REQUIRE ??Subroutine3_0
   \   000008                ; // Fall through to label ??Subroutine3_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine3_0:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
     11          
     12          
     13          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     14          void HearBeat_P_Handle(PROTOCOL_INFO_T* pi){
   \                     HearBeat_P_Handle:
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
     15              //printf("心跳:%X\r\n", pi->protocol.Heartbeat_P.para1);
     16              ModuleBoard_T *ModuleBoard = getModuleByModuleID((MODULE)(pi->module >> 4));
   \   000009                ; Setup parameters for call to function getModuleByModuleID
   \   000009   8E82         MOV     DPL,R6
   \   00000B   8F83         MOV     DPH,R7
   \   00000D   A3           INC     DPTR
   \   00000E   A3           INC     DPTR
   \   00000F   A3           INC     DPTR
   \   000010   E0           MOVX    A,@DPTR
   \   000011   C4           SWAP    A
   \   000012   540F         ANL     A,#0xf
   \   000014   F9           MOV     R1,A
   \   000015   12....       LCALL   `??getModuleByModuleID::?relay`; Banked call to: getModuleByModuleID
   \   000018   8A..         MOV     ?V0,R2
   \   00001A   8B..         MOV     ?V1,R3
     17              if(ModuleBoard == NULL){printf("收到心跳但是无法匹配到模块\r\n");return;} 
   \   00001C   EA           MOV     A,R2
   \   00001D   45..         ORL     A,?V1
   \   00001F   7009         JNZ     ??HearBeat_P_Handle_0
   \   000021                ; Setup parameters for call to function printf
   \   000021   7A..         MOV     R2,#`?<Constant "\\312\\325\\265\\275\\320\\304\\314\\370\\2` & 0xff
   \   000023   7B..         MOV     R3,#(`?<Constant "\\312\\325\\265\\275\\320\\304\\314\\370\\2` >> 8) & 0xff
   \   000025   12....       LCALL   `??printf::?relay`   ; Banked call to: printf
   \   000028   806F         SJMP    ??HearBeat_P_Handle_1
     18              ModuleBoard->ShortAddr = pi->protocol.Heartbeat_P.para2 << 8 | pi->protocol.Heartbeat_P.para3;
   \                     ??HearBeat_P_Handle_0:
   \   00002A   EA           MOV     A,R2
   \   00002B   240B         ADD     A,#0xb
   \   00002D   F8           MOV     R0,A
   \   00002E   E4           CLR     A
   \   00002F   35..         ADDC    A,?V1
   \   000031   F9           MOV     R1,A
   \   000032   8E82         MOV     DPL,R6
   \   000034   8F83         MOV     DPH,R7
   \   000036   A3           INC     DPTR
   \   000037   A3           INC     DPTR
   \   000038   A3           INC     DPTR
   \   000039   A3           INC     DPTR
   \   00003A   A3           INC     DPTR
   \   00003B   A3           INC     DPTR
   \   00003C   A3           INC     DPTR
   \   00003D   E0           MOVX    A,@DPTR
   \   00003E   FA           MOV     R2,A
   \   00003F   E4           CLR     A
   \   000040   CA           XCH     A,R2
   \   000041   FB           MOV     R3,A
   \   000042   8E82         MOV     DPL,R6
   \   000044   8F83         MOV     DPH,R7
   \   000046   A3           INC     DPTR
   \   000047   A3           INC     DPTR
   \   000048   A3           INC     DPTR
   \   000049   A3           INC     DPTR
   \   00004A   A3           INC     DPTR
   \   00004B   A3           INC     DPTR
   \   00004C   A3           INC     DPTR
   \   00004D   A3           INC     DPTR
   \   00004E   E0           MOVX    A,@DPTR
   \   00004F   8882         MOV     DPL,R0
   \   000051   8983         MOV     DPH,R1
   \   000053   F0           MOVX    @DPTR,A
   \   000054   A3           INC     DPTR
   \   000055   EB           MOV     A,R3
   \   000056   F0           MOVX    @DPTR,A
     19              ModuleBoard->ModuleState = ONLINE;
   \   000057   85..82       MOV     DPL,?V0
   \   00005A   85..83       MOV     DPH,?V1
   \   00005D   A3           INC     DPTR
   \   00005E   A3           INC     DPTR
   \   00005F   A3           INC     DPTR
   \   000060   A3           INC     DPTR
   \   000061   A3           INC     DPTR
   \   000062   A3           INC     DPTR
   \   000063   A3           INC     DPTR
   \   000064   A3           INC     DPTR
   \   000065   A3           INC     DPTR
   \   000066   E4           CLR     A
   \   000067   F0           MOVX    @DPTR,A
     20              printf("收到%s模块心跳，地址为%X,%X\r\n", ModuleBoard->Name,ModuleBoard->ShortAddr>> 8, ModuleBoard->ShortAddr & 0xff); 
   \   000068   8882         MOV     DPL,R0
   \   00006A   8983         MOV     DPH,R1
   \   00006C   E0           MOVX    A,@DPTR
   \   00006D   F5..         MOV     ?V2,A
   \   00006F   A3           INC     DPTR
   \   000070   E0           MOVX    A,@DPTR
   \   000071   F5..         MOV     ?V3,A
   \   000073                ; Setup parameters for call to function printf
   \   000073   E5..         MOV     A,?V2
   \   000075   F5..         MOV     ?V4,A
   \   000077   8A..         MOV     ?V5,R2
   \   000079   78..         MOV     R0,#?V4
   \   00007B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00007E   E4           CLR     A
   \   00007F   C5..         XCH     A,?V3
   \   000081   F5..         MOV     ?V2,A
   \   000083   78..         MOV     R0,#?V2
   \   000085   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000088   78..         MOV     R0,#?V0
   \   00008A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00008D   7A..         MOV     R2,#`?<Constant "\\312\\325\\265\\275%s\\304\\243\\277\\351` & 0xff
   \   00008F   7B..         MOV     R3,#(`?<Constant "\\312\\325\\265\\275%s\\304\\243\\277\\351` >> 8) & 0xff
   \   000091   12....       LCALL   `??printf::?relay`   ; Banked call to: printf
   \   000094   7406         MOV     A,#0x6
   \   000096   12....       LCALL   ?DEALLOC_XSTACK8
     21          }
   \                     ??HearBeat_P_Handle_1:
   \   000099   7F06         MOV     R7,#0x6
   \   00009B   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     22          void State_P_Handle(PROTOCOL_INFO_T* pi){
   \                     State_P_Handle:
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
     23              printf("客户端状态:%X\r\n", pi->protocol.State_P.para1);
   \   000005                ; Setup parameters for call to function printf
   \   000005   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_2:
   \   000008   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00000B   7A..         MOV     R2,#`?<Constant "\\277\\315\\273\\247\\266\\313\\327\\264\\3` & 0xff
   \   00000D   7B..         MOV     R3,#(`?<Constant "\\277\\315\\273\\247\\266\\313\\327\\264\\3` >> 8) & 0xff
   \   00000F   80..         SJMP    ?Subroutine0
     24          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     25          void Ack_P_Handle(PROTOCOL_INFO_T* pi){
   \                     Ack_P_Handle:
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
     26              printf("客户端应答:%X\r\n", pi->protocol.Ack_P.para1);
   \   000005                ; Setup parameters for call to function printf
   \   000005   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_3:
   \   000008   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00000B   7A..         MOV     R2,#`?<Constant "\\277\\315\\273\\247\\266\\313\\323\\246\\2` & 0xff
   \   00000D   7B..         MOV     R3,#(`?<Constant "\\277\\315\\273\\247\\266\\313\\323\\246\\2` >> 8) & 0xff
   \   00000F                REQUIRE ?Subroutine0
   \   00000F                ; // Fall through to label ?Subroutine0
     27          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     28          void AddrReport_P_Handle(PROTOCOL_INFO_T* pi){
   \                     AddrReport_P_Handle:
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
     29              printf("客户端上报地址:%X,%X\r\n", pi->protocol.AddrReport_P.para1, pi->protocol.AddrReport_P.para2);
   \   000009                ; Setup parameters for call to function printf
   \   000009   8E82         MOV     DPL,R6
   \   00000B   8F83         MOV     DPH,R7
   \   00000D   A3           INC     DPTR
   \   00000E   12....       LCALL   ??Subroutine2_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_0:
   \   000011   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000014   8E82         MOV     DPL,R6
   \   000016   8F83         MOV     DPH,R7
   \   000018   A3           INC     DPTR
   \   000019   A3           INC     DPTR
   \   00001A   A3           INC     DPTR
   \   00001B   A3           INC     DPTR
   \   00001C   A3           INC     DPTR
   \   00001D   A3           INC     DPTR
   \   00001E   E0           MOVX    A,@DPTR
   \   00001F   F5..         MOV     ?V0,A
   \   000021   78..         MOV     R0,#?V0
   \   000023   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000026   7A..         MOV     R2,#`?<Constant "\\277\\315\\273\\247\\266\\313\\311\\317\\2` & 0xff
   \   000028   7B..         MOV     R3,#(`?<Constant "\\277\\315\\273\\247\\266\\313\\311\\317\\2` >> 8) & 0xff
   \   00002A   12....       LCALL   `??printf::?relay`   ; Banked call to: printf
   \   00002D   7404         MOV     A,#0x4
   \   00002F   12....       LCALL   ?DEALLOC_XSTACK8
     30              if(pi->module >> 4 == WATER_MODULE){
   \   000032   8E82         MOV     DPL,R6
   \   000034   8F83         MOV     DPH,R7
   \   000036   A3           INC     DPTR
   \   000037   A3           INC     DPTR
   \   000038   A3           INC     DPTR
   \   000039   E0           MOVX    A,@DPTR
   \   00003A   54F0         ANL     A,#0xf0
   \   00003C   6410         XRL     A,#0x10
   \   00003E   701F         JNZ     ??AddrReport_P_Handle_0
     31                  WaterM.Short_Addr = pi->protocol.AddrReport_P.para1 << 8 | pi->protocol.AddrReport_P.para2;
   \   000040   8E82         MOV     DPL,R6
   \   000042   8F83         MOV     DPH,R7
   \   000044   A3           INC     DPTR
   \   000045   A3           INC     DPTR
   \   000046   A3           INC     DPTR
   \   000047   A3           INC     DPTR
   \   000048   A3           INC     DPTR
   \   000049   A3           INC     DPTR
   \   00004A   E0           MOVX    A,@DPTR
   \   00004B   F9           MOV     R1,A
   \   00004C   8E82         MOV     DPL,R6
   \   00004E   8F83         MOV     DPH,R7
   \   000050   A3           INC     DPTR
   \   000051   A3           INC     DPTR
   \   000052   A3           INC     DPTR
   \   000053   A3           INC     DPTR
   \   000054   A3           INC     DPTR
   \   000055   A3           INC     DPTR
   \   000056   A3           INC     DPTR
   \   000057   E0           MOVX    A,@DPTR
   \   000058   90....       MOV     DPTR,#WaterM
   \   00005B   F0           MOVX    @DPTR,A
   \   00005C   A3           INC     DPTR
   \   00005D   E9           MOV     A,R1
   \   00005E   F0           MOVX    @DPTR,A
     32              }
     33          } 
   \                     ??AddrReport_P_Handle_0:
   \   00005F   80..         SJMP    ??Subroutine3_0

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??StateGet_P_Handle::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    StateGet_P_Handle

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HearBeat_P_Handle::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HearBeat_P_Handle

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??State_P_Handle::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    State_P_Handle

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??Ack_P_Handle::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Ack_P_Handle

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??AddrReport_P_Handle::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    AddrReport_P_Handle

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\273\\361\\310\\241\\327\\264\\314\\254:%`:
   \   000000   BBF1C8A1     DB "\273\361\310\241\327\264\314\254:%X\015\012"
   \            D7B4CCAC
   \            3A25580D
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\312\\325\\265\\275\\320\\304\\314\\370\\2`:
   \   000000   CAD5B5BD     DB "\312\325\265\275\320\304\314\370\265\253\312\307\316\336\267\250\306\245\305\344\265\275\304\243\277\351\015\012"
   \            D0C4CCF8
   \            B5ABCAC7
   \            CEDEB7A8
   \            C6A5C5E4
   \            B5BDC4A3
   \            BFE90D0A
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\312\\325\\265\\275%s\\304\\243\\277\\351`:
   \   000000   CAD5B5BD     DB "\312\325\265\275%s\304\243\277\351\320\304\314\370\243\254\265\330\326\267\316\252%X,%X\015\012"
   \            2573C4A3
   \            BFE9D0C4
   \            CCF8A3AC
   \            B5D8D6B7
   \            CEAA2558
   \            2C25580D
   \            0A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\277\\315\\273\\247\\266\\313\\327\\264\\3`:
   \   000000   BFCDBBA7     DB "\277\315\273\247\266\313\327\264\314\254:%X\015\012"
   \            B6CBD7B4
   \            CCAC3A25
   \            580D0A00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\277\\315\\273\\247\\266\\313\\323\\246\\2`:
   \   000000   BFCDBBA7     DB "\277\315\273\247\266\313\323\246\264\360:%X\015\012"
   \            B6CBD3A6
   \            B4F03A25
   \            580D0A00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\277\\315\\273\\247\\266\\313\\311\\317\\2`:
   \   000000   BFCDBBA7     DB "\277\315\273\247\266\313\311\317\261\250\265\330\326\267:%X,%X\015\012"
   \            B6CBC9CF
   \            B1A8B5D8
   \            D6B73A25
   \            582C2558
   \            0D0A00  

   Maximum stack usage in bytes:

   XSTACK Function
   ------ --------
     12   Ack_P_Handle
       12   -> printf
     14   AddrReport_P_Handle
       14   -> printf
     20   HearBeat_P_Handle
       14   -> getModuleByModuleID
       14   -> printf
       20   -> printf
     12   StateGet_P_Handle
       12   -> printf
     12   State_P_Handle
       12   -> printf


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      14  ?<Constant "\273\361\310\241\327\264\314\254:%
      23  ?<Constant "\277\315\273\247\266\313\311\317\2
      16  ?<Constant "\277\315\273\247\266\313\323\246\2
      16  ?<Constant "\277\315\273\247\266\313\327\264\3
      30  ?<Constant "\312\325\265\275%s\304\243\277\351
      29  ?<Constant "\312\325\265\275\320\304\314\370\2
      15  ??Subroutine2_0
       5  ??Subroutine3_0
       8  ?Subroutine0
       4  ?Subroutine1
      15  Ack_P_Handle
       6  Ack_P_Handle::?relay
      97  AddrReport_P_Handle
       6  AddrReport_P_Handle::?relay
     158  HearBeat_P_Handle
       6  HearBeat_P_Handle::?relay
      18  StateGet_P_Handle
       6  StateGet_P_Handle::?relay
      17  State_P_Handle
       6  State_P_Handle::?relay

 
 337 bytes in segment BANKED_CODE
  30 bytes in segment BANK_RELAYS
 128 bytes in segment XDATA_ROM_C
 
 367 bytes of CODE  memory
 128 bytes of CONST memory

Errors: none
Warnings: none

///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V9.30.1.3056 for 8051               31/Oct/2016  13:38:17
// Copyright 2004-2015 IAR Systems AB.
// Standalone license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\Module\WaterMachine\ProtocolHandle.c
//    Command line       =  
//        -f "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg"
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3
//        -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f
//        "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
//        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
//        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=50 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)
//        -DREJOIN_POLL_RATE=440 "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\Module\WaterMachine\ProtocolHandle.c"
//        -D HAL_UART=TRUE -D HAL_UART_ISR=1 -D HAL_UART_DMA=0 -D LOG_OUT -D
//        UART1_PROTOCOL_RESOLVER=1 -D xISQC -D NWK_AUTO_POLL -D xZTOOL_P1 -D
//        ISR_KEYINTERRUPT -D xMT_TASK -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D
//        xLCD_SUPPORTED=DEBUG -D xPOWER_SAVING -lC
//        "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\WaterMachine\List"
//        -lA "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\WaterMachine\List"
//        --diag_suppress Pe001,Pa010 -o
//        "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\WaterMachine\Obj"
//        -e --no_code_motion --debug --core=plain --dptr=16,1
//        --data_model=large --code_model=banked
//        --calling_convention=xdata_reentrant --place_constants=data_rom
//        --nr_virtual_regs 8 -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\Source\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\Frame\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\Module\WaterMachine\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\ZMain\TI2530DB\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\..\..\Components\hal\include\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\..\..\Components\mac\include\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\..\..\Components\mt\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\..\..\Components\osal\include\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\..\..\Components\services\saddr\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\..\..\Components\services\sdata\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\..\..\Components\stack\af\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\..\..\Components\stack\sec\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\..\..\Components\stack\sys\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\..\..\Components\zmac\"
//        -I "E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
//        -Ohz
//    List file          =  
//        E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\CC2530DB\WaterMachine\List\ProtocolHandle.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME ProtocolHandle

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__iar_require _formatted_write", ""
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V1
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V4
        EXTERN ?V5
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?XSP

        PUBLIC `??HearBeat_P_Handle::?relay`
        FUNCTION `??HearBeat_P_Handle::?relay`,0203H
        PUBLIC `??ReportState::?relay`
        FUNCTION `??ReportState::?relay`,0203H
        PUBLIC `??StateGet_P_Handle::?relay`
        FUNCTION `??StateGet_P_Handle::?relay`,0203H
        PUBLIC HearBeat_P_Handle
        FUNCTION HearBeat_P_Handle,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC ReportState
        FUNCTION ReportState,021203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 3, STACK
        LOCFRAME XSTACK, 1, STACK
        PUBLIC StateGet_P_Handle
        FUNCTION StateGet_P_Handle,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource SP:8, PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
Protocol_Send       SYMBOL "Protocol_Send"
`??Protocol_Send::?relay` SYMBOL "?relay", Protocol_Send
getModuleByModuleID SYMBOL "getModuleByModuleID"
`??getModuleByModuleID::?relay` SYMBOL "?relay", getModuleByModuleID
printf              SYMBOL "printf"
`??printf::?relay`  SYMBOL "?relay", printf
HearBeat_P_Handle   SYMBOL "HearBeat_P_Handle"
`??HearBeat_P_Handle::?relay` SYMBOL "?relay", HearBeat_P_Handle
ReportState         SYMBOL "ReportState"
`??ReportState::?relay` SYMBOL "?relay", ReportState
StateGet_P_Handle   SYMBOL "StateGet_P_Handle"
`??StateGet_P_Handle::?relay` SYMBOL "?relay", StateGet_P_Handle

        EXTERN `??Protocol_Send::?relay`
        FUNCTION `??Protocol_Send::?relay`,00H
        EXTERN `??getModuleByModuleID::?relay`
        FUNCTION `??getModuleByModuleID::?relay`,00H
        EXTERN `??printf::?relay`
        FUNCTION `??printf::?relay`,00H
        EXTERN Protocol_Send
        FUNCTION Protocol_Send,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 1, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN WaterM
        EXTERN getModuleByModuleID
        FUNCTION getModuleByModuleID,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN printf
        FUNCTION printf,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// E:\资源\个人项目\ZigbeeProject\Z-Stack Mesh 1.0.0\Projects\zstack\Samples\Demo_App_V2.04优化动态内存\Module\WaterMachine\ProtocolHandle.c
//    1 #include "ProtocolHandle.h"
//    2 #include "WaterMachineDriver.h"
//    3 #include "ModuleManager.h"
//    4 //void Cmd_P_Handle(Protocol_Info_T* pi){
//    5 //    printf("控制指令:%X\r\n", pi->protocol.Cmd_P.para1);
//    6 //}

        RSEG BANKED_CODE:CODE:NOROOT(0)
//    7 void ReportState(void){
ReportState:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ReportState
        CODE
        FUNCALL ReportState, Protocol_Send
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 1, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 1, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 1)
//    8     STATE_PROTOCOL_T spt = {0};
//    9     spt.para1 = WaterM.State;
        MOV     DPTR,#WaterM + 2
        MOVX    A,@DPTR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
//   10     Protocol_Send(STATE_PROTOCOL, &spt, sizeof(STATE_PROTOCOL_T)); 
        ; Setup parameters for call to function Protocol_Send
        MOV     R1,#0x1
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     R2,#0x20
        MOV     R3,#0x10
        LCALL   `??Protocol_Send::?relay`; Banked call to: Protocol_Send
//   11 }
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 XSP16+0
        POP     DPH
          CFI DPH0 SameValue
          CFI CFA_SP SP+-4
        POP     DPL
          CFI DPL0 SameValue
          CFI CFA_SP SP+-3
        LJMP    ?BRET
          CFI EndBlock cfiBlock0
//   12 
//   13 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   14 void StateGet_P_Handle(Protocol_Info_T* pi){ 
StateGet_P_Handle:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function StateGet_P_Handle
        CODE
        FUNCALL StateGet_P_Handle, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL StateGet_P_Handle, ReportState
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//   15     STATEGET_PROTOCOL_T* p = pi->ParameterList;
//   16     printf("获取状态:%X\r\n", p->para1); 
        ; Setup parameters for call to function printf
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        MOVX    A,@DPTR
        MOV     ?V0,A
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     R2,#`?<Constant "\\273\\361\\310\\241\\327\\264\\314\\254:%` & 0xff
        MOV     R3,#(`?<Constant "\\273\\361\\310\\241\\327\\264\\314\\254:%` >> 8) & 0xff
        LCALL   `??printf::?relay`   ; Banked call to: printf
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//   17     ReportState(); 
        ; Setup parameters for call to function ReportState
        LCALL   `??ReportState::?relay`; Banked call to: ReportState
//   18 } 
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock1
//   19 
//   20 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   21 void HearBeat_P_Handle(Protocol_Info_T* pi){
HearBeat_P_Handle:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function HearBeat_P_Handle
        CODE
        FUNCALL HearBeat_P_Handle, getModuleByModuleID
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL HearBeat_P_Handle, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL HearBeat_P_Handle, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
//   22     HEARTBEAT_PROTOCOL_T* hp = pi->ParameterList;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
//   23     //printf("心跳:%X\r\n", pi->protocol.Heartbeat_P.para1);
//   24     ModuleBoard_T *ModuleBoard = getModuleByModuleID((MODULE)(pi->Module >> 4));
        ; Setup parameters for call to function getModuleByModuleID
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        MOV     R1,A
        LCALL   `??getModuleByModuleID::?relay`; Banked call to: getModuleByModuleID
        MOV     ?V0,R2
        MOV     ?V1,R3
//   25     if(ModuleBoard == NULL){printf("收到心跳但是无法匹配到模块\r\n");return;} 
        MOV     A,R2
        ORL     A,?V1
        JNZ     ??HearBeat_P_Handle_0
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "\\312\\325\\265\\275\\320\\304\\314\\370\\2` & 0xff
        MOV     R3,#(`?<Constant "\\312\\325\\265\\275\\320\\304\\314\\370\\2` >> 8) & 0xff
        LCALL   `??printf::?relay`   ; Banked call to: printf
        SJMP    ??HearBeat_P_Handle_1
//   26     ModuleBoard->ShortAddr = hp->para2 << 8 | hp->para3;
??HearBeat_P_Handle_0:
        MOV     A,R2
        ADD     A,#0xb
        MOV     R0,A
        CLR     A
        ADDC    A,?V1
        MOV     R1,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        CLR     A
        XCH     A,R2
        MOV     R3,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
//   27     ModuleBoard->ModuleState = ONLINE;
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//   28     printf("收到%s模块心跳，地址为%X,%X\r\n", ModuleBoard->Name,ModuleBoard->ShortAddr>> 8, ModuleBoard->ShortAddr & 0xff); 
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V3,A
        ; Setup parameters for call to function printf
        MOV     A,?V2
        MOV     ?V4,A
        MOV     ?V5,R2
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        CLR     A
        XCH     A,?V3
        MOV     ?V2,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     R2,#`?<Constant "\\312\\325\\265\\275%s\\304\\243\\277\\351` & 0xff
        MOV     R3,#(`?<Constant "\\312\\325\\265\\275%s\\304\\243\\277\\351` >> 8) & 0xff
        LCALL   `??printf::?relay`   ; Banked call to: printf
        MOV     A,#0x6
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
//   29 }
??HearBeat_P_Handle_1:
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock2

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ReportState::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ReportState

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??StateGet_P_Handle::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    StateGet_P_Handle

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??HearBeat_P_Handle::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    HearBeat_P_Handle

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\273\\361\\310\\241\\327\\264\\314\\254:%`:
        DB "\273\361\310\241\327\264\314\254:%X\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\312\\325\\265\\275\\320\\304\\314\\370\\2`:
        DB "\312\325\265\275\320\304\314\370\265\253\312\307\316\336\267\250\306\245\305\344\265\275\304\243\277\351\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\312\\325\\265\\275%s\\304\\243\\277\\351`:
        DB "\312\325\265\275%s\304\243\277\351\320\304\314\370\243\254\265\330\326\267\316\252%X,%X\015\012"

        END
// 
// 256 bytes in segment BANKED_CODE
//  18 bytes in segment BANK_RELAYS
//  73 bytes in segment XDATA_ROM_C
// 
// 274 bytes of CODE  memory
//  73 bytes of CONST memory
//
//Errors: none
//Warnings: none

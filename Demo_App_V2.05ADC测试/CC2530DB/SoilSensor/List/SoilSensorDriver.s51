///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V9.30.1.3056 for 8051               25/Nov/2016  09:09:54
// Copyright 2004-2015 IAR Systems AB.
// Standalone license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\Module\SoilSensor\SoilSensorDriver.c
//    Command line       =  
//        -f "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg"
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3
//        -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f
//        "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07,
//        0x09, 0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C,
//        0x0D}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=50 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)
//        -DREJOIN_POLL_RATE=440 "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\Module\SoilSensor\SoilSensorDriver.c"
//        -D HAL_UART=TRUE -D HAL_UART_ISR=1 -D HAL_UART_DMA=2 -D
//        HOLD_AUTO_START -D LOG_OUT -D UART1_PROTOCOL_RESOLVER=1 -D xISQC -D
//        NWK_AUTO_POLL -D xZTOOL_P1 -D ISR_KEYINTERRUPT -D xMT_TASK -D
//        xMT_SYS_FUNC -D xMT_ZDO_FUNC -D xLCD_SUPPORTED=DEBUG -D xPOWER_SAVING
//        -lC "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\SoilSensor\List"
//        -lA "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\SoilSensor\List"
//        --diag_suppress Pe001,Pa010 -o
//        "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\SoilSensor\Obj"
//        -e --no_code_motion --debug --core=plain --dptr=16,1
//        --data_model=large --code_model=banked
//        --calling_convention=xdata_reentrant --place_constants=data_rom
//        --nr_virtual_regs 8 -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\" -I
//        "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\Source\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\Frame\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\Module\SoilSensor\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\ZMain\TI2530DB\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\..\..\Components\hal\include\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\..\..\Components\mac\include\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\..\..\Components\mt\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\..\..\Components\osal\include\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\..\..\Components\services\saddr\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\..\..\Components\services\sdata\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\..\..\Components\stack\af\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\..\..\Components\stack\sec\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\..\..\Components\stack\sys\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\..\..\Components\zmac\"
//        -I "E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
//        -Ohz
//    List file          =  
//        E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh
//        1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\CC2530DB\SoilSensor\List\SoilSensorDriver.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME SoilSensorDriver

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__iar_require _formatted_write", ""
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V1
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?XSP
        EXTERN __INIT_XDATA_Z

        PUBLIC `??SoilSensor_Init::?relay`
        FUNCTION `??SoilSensor_Init::?relay`,0203H
        PUBLIC `??SoilSensor_Read::?relay`
        FUNCTION `??SoilSensor_Read::?relay`,0203H
        PUBLIC SoilSensorM
        PUBLIC SoilSensor_Init
        FUNCTION SoilSensor_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC SoilSensor_Read
        FUNCTION SoilSensor_Read,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource SP:8, PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
HalAdcInit          SYMBOL "HalAdcInit"
`??HalAdcInit::?relay` SYMBOL "?relay", HalAdcInit
HalAdcRead          SYMBOL "HalAdcRead"
`??HalAdcRead::?relay` SYMBOL "?relay", HalAdcRead
printf              SYMBOL "printf"
`??printf::?relay`  SYMBOL "?relay", printf
SoilSensor_Init     SYMBOL "SoilSensor_Init"
`??SoilSensor_Init::?relay` SYMBOL "?relay", SoilSensor_Init
SoilSensor_Read     SYMBOL "SoilSensor_Read"
`??SoilSensor_Read::?relay` SYMBOL "?relay", SoilSensor_Read

        EXTERN `??HalAdcInit::?relay`
        FUNCTION `??HalAdcInit::?relay`,00H
        EXTERN `??HalAdcRead::?relay`
        FUNCTION `??HalAdcRead::?relay`,00H
        EXTERN `??printf::?relay`
        FUNCTION `??printf::?relay`,00H
        EXTERN HalAdcInit
        FUNCTION HalAdcInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalAdcRead
        FUNCTION HalAdcRead,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN printf
        FUNCTION printf,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// E:\LiyaoProject\Zigbee_Project\Z-Stack Mesh 1.0.0\Projects\zstack\Samples\Demo_App_V2.05ADC≤‚ ‘\Module\SoilSensor\SoilSensorDriver.c
//    1 #include "SoilSensorDriver.h"
//    2 
//    3 #include "SoilSensorProtocol.h"
//    4 #include "ProtocolHandle.h"
//    5 #include "hal_adc.h"

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//    6 SoilSensor_Info_T SoilSensorM;
SoilSensorM:
        DS 16
        REQUIRE __INIT_XDATA_Z
//    7 /****************************************************
//    8 	∫Ø ˝√˚:	SoilSensor_Init
//    9 	π¶ƒ‹:	Õ¡»¿ ™∂»¥´∏–∆˜IOœ‡πÿ≥ı ºªØ  
//   10   ◊˜’ﬂ:	2016ƒÍ11‘¬24»’09:56:30
//   11 ****************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   12 void SoilSensor_Init(void){ 
SoilSensor_Init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function SoilSensor_Init
        CODE
        FUNCALL SoilSensor_Init, HalAdcInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   13   HalAdcInit();
        ; Setup parameters for call to function HalAdcInit
        LCALL   `??HalAdcInit::?relay`; Banked call to: HalAdcInit
//   14 }
        POP     DPH
          CFI DPH0 SameValue
          CFI CFA_SP SP+-4
        POP     DPL
          CFI DPL0 SameValue
          CFI CFA_SP SP+-3
        LJMP    ?BRET
          CFI EndBlock cfiBlock0
//   15 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   16 void SoilSensor_Read(void){
SoilSensor_Read:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function SoilSensor_Read
        CODE
        FUNCALL SoilSensor_Read, HalAdcRead
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SoilSensor_Read, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SoilSensor_Read, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 16
        MOV     A,#-0x10
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
//   17   uint16 val[8] = {0};
        MOV     DPTR,#`?<Constant {0, 0, 0, 0, 0, 0, 0, 0}>`
        MOV     R4,?XSP + 0
        MOV     R5,?XSP + 1
        MOV     A,#0x10
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//   18   for(int i = 0; i < 8; i++){
        MOV     R6,A
        MOV     R7,A
//   19     val[i] = HalAdcRead(i,HAL_ADC_RESOLUTION_14);
??SoilSensor_Read_0:
        ; Setup parameters for call to function HalAdcRead
        MOV     R2,#0x4
        MOV     A,R6
        MOV     R1,A
        LCALL   `??HalAdcRead::?relay`; Banked call to: HalAdcRead
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     A,R6
        MOV     R0,A
        MOV     A,R7
        MOV     R1,A
        MOV     A,R0
        ADD     A,R0
        MOV     R0,A
        MOV     A,R1
        RLC     A
        MOV     R1,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,DPL
        ADD     A,R0
        MOV     DPL,A
        MOV     A,DPH
        ADDC    A,R1
        MOV     DPH,A
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
//   20     printf("%d ", val[i]);
        ; Setup parameters for call to function printf
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     R2,#`?<Constant "%d ">` & 0xff
        MOV     R3,#(`?<Constant "%d ">` >> 8) & 0xff
        LCALL   `??printf::?relay`   ; Banked call to: printf
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
//   21   }
        INC     R6
        MOV     A,R6
        JNZ     ??SoilSensor_Read_1
        INC     R7
??SoilSensor_Read_1:
        CLR     C
        SUBB    A,#0x8
        MOV     A,R7
        SUBB    A,#0x0
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        JC      ??SoilSensor_Read_0
//   22   printf("\r\n");
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "\\r\\n">` >> 8) & 0xff
        LCALL   `??printf::?relay`   ; Banked call to: printf
//   23 }
        MOV     A,#0x10
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock1

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??SoilSensor_Init::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    SoilSensor_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??SoilSensor_Read::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    SoilSensor_Read

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {0, 0, 0, 0, 0, 0, 0, 0}>`:
        DATA16
        DW 0
        DW 0
        DW 0
        DW 0
        DW 0
        DW 0
        DW 0
        DW 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
`?<Constant "%d ">`:
        DB "%d "

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\r\\n">`:
        DB "\015\012"

        END
//   24 /****************************************************
//   25 	∫Ø ˝√˚:	WaterMachine_Init
//   26 	π¶ƒ‹:	“˚ÀÆª˙IOœ‡πÿ≥ı ºªØ  
//   27         ◊˜’ﬂ:	2016ƒÍ10‘¬18»’20:44:34
//   28 ***************************************************
//   29 void State_Check(void){
//   30   RUN_STATE oldstate = WaterM.State;
//   31   if(WaterM.State != WATERM_AWAIT){//»Áπ˚√ª”–πÿ±’µÁ‘¥÷«øÿ 
//   32     PWRLED_ENABLE;
//   33     if(TEMPCTRL_READ == TEMPCTRL_ENABLE){//»Áπ˚Œ¬øÿ ˝æ›–Ë“™º”»»
//   34         JDQ_ENABLE;//¥Úø™ºÃµÁ∆˜À˘øÿµÁ◊ËÀø
//   35         WaterM.State = WATERM_RUN;
//   36         //printf("µÁ◊ËÀøº”»»π§◊˜\r\n");
//   37     }else{
//   38         JDQ_DISABLE;//πÿ±’ºÃµÁ∆˜À˘øÿµÁ◊ËÀø
//   39         WaterM.State = WATERM_FINISH;
//   40         //printf("µÁ◊ËÀøº”»»Õ£÷π\r\n");
//   41     }
//   42   }else{
//   43     JDQ_DISABLE;
//   44     PWRLED_DISABLE;
//   45   }
//   46   if(WaterM.State != oldstate)
//   47     ReportState();
//   48 }
//   49 */
//   50 /****************************************************
//   51 	∫Ø ˝√˚:	Cmd_P_Handle
//   52 	π¶ƒ‹:	Ω” ’÷˜øÿ÷∏¡Ó 
//   53         ◊˜’ﬂ:	2016ƒÍ10‘¬18»’20:44:34
//   54 ***************************************************
//   55 void Cmd_P_Handle(Protocol_Info_T* pi){
//   56   CMD_PROTOCOL_T* cp = pi->ParameterList;
//   57   printf(" ’µΩøÿ÷∆√¸¡Ó\r\n");
//   58   if(cp->para1 == (uint8_t)WATERM_CLOSE){
//   59     WaterM.State = WATERM_AWAIT;
//   60     printf("÷«øÿπÿ±’\r\n");
//   61   }else if(cp->para1 == (uint8_t)WATERM_OPEN){
//   62     WaterM.State = WATERM_RUN;
//   63     printf("÷«øÿø™∆Ù\r\n");
//   64   }
//   65   ReportState();
//   66   
//   67   
//   68 }*/
// 
// 132 bytes in segment BANKED_CODE
//  12 bytes in segment BANK_RELAYS
//  23 bytes in segment XDATA_ROM_C
//  16 bytes in segment XDATA_Z
// 
// 144 bytes of CODE  memory
//  23 bytes of CONST memory
//  16 bytes of XDATA memory
//
//Errors: none
//Warnings: none
